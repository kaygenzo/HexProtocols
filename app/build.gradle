buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
def versionPropsFile = rootProject.file('version.properties')

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 27

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        def vCode = versionProps['VERSION_CODE'].toInteger()
        def vBuild = versionProps['VERSION_BUILD'].toInteger() + 1

        def vName = versionProps['VERSION_NAME'].toString() + "." + vBuild.toString()

        println "vCode="+vCode + " vName="+vName+" vBuild="+vBuild

        defaultConfig {
            applicationId "com.telen.sdk.demo"
            minSdkVersion 19
            targetSdkVersion 27
            versionCode vCode
            versionName vName
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            multiDexEnabled true
        }

        versionProps['VERSION_BUILD']=vBuild.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    }
    else {
        throw new GradleException("Could not read version.properties!")
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    lintOptions {
        abortOnError false
        disable 'GoogleAppIndexingWarning'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'

    implementation "io.reactivex.rxjava2:rxandroid:$rxjava2Version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2Version"

    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:recyclerview-v7:$supportVersion"
    implementation "com.android.support:cardview-v7:$supportVersion"
    implementation "com.android.support:multidex:1.0.3"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }
    implementation files('libs/bcprov-jdk15on-160.jar')
    implementation 'com.github.QuadFlask:colorpicker:0.0.13'

    implementation project(':commonProtocolSdk')
    implementation project(':bleProtocolSdk')
    implementation project(':socketProtocolSdk')

    implementation "com.google.firebase:firebase-firestore:$firebaseVersion"
    implementation "com.google.firebase:firebase-core:$firebaseVersion"
}

apply plugin: 'com.google.gms.google-services'