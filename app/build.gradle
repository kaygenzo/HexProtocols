buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
def versionPropsFile = rootProject.file('version.properties')

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
def versionProps = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
if (keystorePropertiesFile.canRead()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
else {
    throw new GradleException("Could not read keystore.properties!")
}

if (versionPropsFile.canRead()) {
    versionProps.load(new FileInputStream(versionPropsFile))
}
else {
    throw new GradleException("Could not read version.properties!")
}

def vCode = versionProps['VERSION_CODE'].toInteger()
def vName = versionProps['VERSION_NAME'].toString()
def vBuild = versionProps['VERSION_BUILD'].toInteger()

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId "com.telen.sdk.demo"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode vCode
        versionName vName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "app"
    productFlavors {
        dev {
            versionNameSuffix "-dev"
            dimension "app"
        }

        beta {
//            versionNameSuffix "." + vBuild.toString()
            dimension "app"
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    lintOptions {
        abortOnError false
        disable 'GoogleAppIndexingWarning'
    }
}

configurations {
    betaImplementation
    devImplementation
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'

    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid2Version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2Version"

    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:recyclerview-v7:$supportVersion"
    implementation "com.android.support:cardview-v7:$supportVersion"
    implementation "com.android.support:multidex:1.0.3"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }

    implementation project(':commonProtocolSdk')
    implementation project(':bleProtocolSdk')
    implementation project(':socketProtocolSdk')
    implementation project(':commonui')

    //for preview rendering
    implementation "com.polidea.rxandroidble2:rxandroidble:$rxandroidbleVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3Version"
}

tasks.whenTaskAdded { task ->
    if(task.name == 'assembleBetaRelease') {
        task.dependsOn incrementBuildNumber
    }
}

task incrementBuildNumber << {
    android.productFlavors.beta {
        vBuild = versionProps['VERSION_BUILD'].toInteger() +1
        println "vCode="+vCode + " vName="+vName+" vBuild="+vBuild
        versionProps['VERSION_BUILD'] = vBuild.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
        android.productFlavors.beta.versionName vName + "." + vBuild.toString()
        println("beta="+android.productFlavors.beta)
    }
}

apply plugin: 'com.google.gms.google-services'